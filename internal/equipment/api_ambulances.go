/*
 * Ambulance Equipment Api
 *
 * Ambulance Equipment management for Web-In-Cloud system
 *
 * API version: 1.0.0
 * Contact: <your_email>
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

 package equipment

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

type AmbulancesAPI interface {

	// internal registration of api routes
	addRoutes(routerGroup *gin.RouterGroup)

	// CreateAmbulance - Create new ambulance
	CreateAmbulance(ctx *gin.Context)

	// DeleteAmbulance - Deletes specific ambulance
	DeleteAmbulance(ctx *gin.Context)

	// GetAmbulanceList - Provides the list of ambulances
	GetAmbulanceList(ctx *gin.Context)

}

// partial implementation of AmbulancesAPI - all functions must be implemented in add on files
type implAmbulancesAPI struct {

}

func newAmbulancesAPI() AmbulancesAPI {
  return &implAmbulancesAPI{}
}

func (this *implAmbulancesAPI) addRoutes(routerGroup *gin.RouterGroup) {
  routerGroup.Handle( http.MethodPost, "/ambulances", this.CreateAmbulance)
  routerGroup.Handle( http.MethodDelete, "/ambulance/:ambulanceId", this.DeleteAmbulance)
  routerGroup.Handle( http.MethodGet, "/ambulances", this.GetAmbulanceList)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // CreateAmbulance - Create new ambulance
// func (this *implAmbulancesAPI) CreateAmbulance(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

// // DeleteAmbulance - Deletes specific ambulance
// func (this *implAmbulancesAPI) DeleteAmbulance(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

// // GetAmbulanceList - Provides the list of ambulances
// func (this *implAmbulancesAPI) GetAmbulanceList(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//


